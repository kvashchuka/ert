name: Python package

on: [push, pull_request]

env:
  ERT_SHOW_BACKTRACE: 1

jobs:
  build:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Ubuntu dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install libxcb-image0 libxcb-icccm4 libxcb-keysyms1 libxcb-randr0 libxcb-render0 libxcb-render-util0 libxcb-shape0 libxcb-shm0 libxcb-xfixes0 libxcb-xinerama0 libfontconfig1 libxcb-xkb1 libxkbcommon-x11-0 libdbus-1-3 x11-xserver-utils herbstluftwm

    - name: Install ERT and dependencies
      run: |
        pip install -r dev-requirements.txt
        pip install .

    - name: Install ert-storage
      run: |
        # ert-storage is not in pypi yet, pip install shold go away when it is
        pip install git+https://github.com/equinor/ert-storage.git

    - name: Test Ubuntu
      if: matrix.os == 'ubuntu-latest'
      env:
        DISPLAY: ':99.0'
      run: |
        /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 640x480x24 -ac +extension GLX
        sleep 3
        herbstluftwm &
        sleep 1
        python -m pytest -sv

    - name: Test MacOS
      if: matrix.os == 'macos-latest'
      run: |
        python -m pytest -sv

    - name: Test docs and CLI
      run: |
        sphinx-build -n -v -E -W ./docs/rst/manual ./tmp/ert_docs
        pip uninstall -y PyQt5
        ert --help


  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [build]

    # If this is a tagged release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Build wheel
      run: |
        pip install --upgrade pip wheel setuptools
        pip wheel . --no-deps -w dist

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@v1.3.1
      with:
        user: statoil-travis
        password: ${{ secrets.pypi_password }}
